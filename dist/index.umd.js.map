{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Calculate angles between landmarks\n * @author Yousuf Kalim\n */\n\n/**\n * With this function we will calculate the degrees of an angle\n * @param {Number} x1 first joint's x-axis\n * @param {Number} y1 first joint's y-axis\n * @param {Number} x2 second joint's x-axis\n * @param {Number} y2 second joint's y-axis\n * @param {Number} x3 third joint's x-axis\n * @param {Number} y3 third joint's y-axis\n * @param {Boolean} small boolean value to check if we have to return lower or upper angles\n * @param {Boolean} round boolean value to check if we have to return round\n * @return {Number} degree 0 to 360\n */\nconst calculateDegrees = (x1, y1, x2, y2, x3, y3, small, round) => {\n  // Making the radians from joint angles\n  const A = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  const B = Math.sqrt(Math.pow(x2 - x3, 2) + Math.pow(y2 - y3, 2));\n  const C = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2));\n  const jointAngleRadians = Math.acos((B * B + A * A - C * C) / (2 * B * A));\n\n  // Making the degree from radians angle\n  let jointAngleDegrees = Math.round((jointAngleRadians * 180.0) / Math.PI, 1);\n\n  //   This will prevent negative values (it will convert -90 to 270)\n  jointAngleDegrees = (jointAngleDegrees + 360) % 360;\n\n  if (small) {\n    //  we have to return lower angle\n    jointAngleDegrees = Math.min(jointAngleDegrees, 360 - jointAngleDegrees);\n  } else {\n    //   Otherwise we will send upper angle\n    jointAngleDegrees = Math.max(jointAngleDegrees, 360 - jointAngleDegrees);\n  }\n\n  if (round) {\n    //   Making round from 0\n    jointAngleDegrees = Math.round(jointAngleDegrees, 0);\n  }\n\n  // Finally return the calculated angle\n  return jointAngleDegrees;\n};\n\n// This function will validate the arguments\nconst validateArgs = (landmarks1, landmarks2, landmarks3, opt) => {\n  if (!landmarks1 || !landmarks2 || !landmarks3) {\n    throw new Error('Please provide landmarks');\n  }\n  if (!opt) {\n    throw new Error('Please provide options');\n  }\n  if (\n    [landmarks1, landmarks2, landmarks3].some(\n      (landmark) => isNaN(parseFloat(landmark.x)) || isNaN(parseFloat(landmark.y)),\n    )\n  ) {\n    throw new Error('Please provide landmarks with correct x and y values');\n  }\n  if (typeof opt.small !== 'boolean' || typeof opt.round !== 'boolean') {\n    throw new Error('Please provide options with correct small and round values');\n  }\n\n  return {\n    landmarks1: {\n      x: parseFloat(landmarks1.x),\n      y: parseFloat(landmarks1.y),\n    },\n    landmarks2: {\n      x: parseFloat(landmarks2.x),\n      y: parseFloat(landmarks2.y),\n    },\n    landmarks3: {\n      x: parseFloat(landmarks3.x),\n      y: parseFloat(landmarks3.y),\n    },\n  };\n};\n\n/**\n * With this function we will calculate the degrees of an angle\n * @return {Number} degree 0 to 360\n * @param landmarks1\n * @param landmarks2\n * @param landmarks3\n * @param opt\n */\nconst findAngle = (landmarks1, landmarks2, landmarks3, opt = { small: false, round: true }) => {\n  const validatedArgs = validateArgs(landmarks1, landmarks2, landmarks3, opt);\n  const { x: x1, y: y1 } = validatedArgs.landmarks1;\n  const { x: x2, y: y2 } = validatedArgs.landmarks2;\n  const { x: x3, y: y3 } = validatedArgs.landmarks3;\n  const { small, round } = opt;\n  const angle = calculateDegrees(x1, y1, x2, y2, x3, y3, small, round);\n  return angle;\n};\n\nexport default findAngle;\n"],"names":["landmarks1","landmarks2","landmarks3","opt","small","round","x1","y1","x2","y2","x3","y3","A","B","C","jointAngleRadians","jointAngleDegrees","validatedArgs","Error","some","landmark","isNaN","parseFloat","x","y","validateArgs","_validatedArgs$landma3","Math","sqrt","pow","acos","PI","min","max"],"mappings":"+OA0FkB,SAACA,EAAYC,EAAYC,EAAYC,QAAG,IAAHA,IAAAA,EAAM,CAAEC,OAAO,EAAOC,OAAO,IAClF,IA1EwBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIP,EAAOC,EAEjDO,EACAC,EACCC,EACgBC,EAGnBC,EAkEEC,EA3Ca,SAACjB,EAAYC,EAAYC,EAAYC,GACxD,IAAKH,IAAeC,IAAeC,EACjC,MAAM,IAASgB,MAAC,4BAElB,IAAKf,EACH,MAAUe,IAAAA,MAAM,0BAElB,GACE,CAAClB,EAAYC,EAAYC,GAAYiB,KACnC,SAACC,GAAQ,OAAUC,MAACC,WAAWF,EAASG,KAAOF,MAAMC,WAAWF,EAASI,GAAG,GAG9E,MAAM,IAASN,MAAC,wDAElB,GAAyB,kBAAdf,EAAIC,OAA4C,kBAAXD,EAACE,MAC/C,MAAM,IAASa,MAAC,8DAGlB,MAAO,CACLlB,WAAY,CACVuB,EAAGD,WAAWtB,EAAWuB,GACzBC,EAAGF,WAAWtB,EAAWwB,IAE3BvB,WAAY,CACVsB,EAAGD,WAAWrB,EAAWsB,GACzBC,EAAGF,WAAWrB,EAAWuB,IAE3BtB,WAAY,CACVqB,EAAGD,WAAWpB,EAAWqB,GACzBC,EAAGF,WAAWpB,EAAWsB,IAG/B,CAWwBC,CAAazB,EAAYC,EAAYC,EAAYC,GAC9Cc,EAAAA,EAAcjB,WACdiB,EAAAA,EAAchB,WACvCyB,EAAyBT,EAAcf,WAGvC,OAhFwBI,EA2EhBiB,EAAAA,EA3EoBhB,IA2EbiB,EA3EiBhB,EA4ExBe,EAAAA,EA5E4Bd,EA4ErBe,EAAAA,EA5EyBd,EA6E3BgB,EAALH,EA7EoCZ,EA6ExBe,EAALF,EA7EiCpB,EA8EvBD,EAAjBC,MA9E+CC,EA8E9BF,EAAVE,MA5ETO,EAAIe,KAAKC,KAAKD,KAAKE,IAAIrB,EAAKF,EAAI,GAAKqB,KAAKE,IAAIpB,EAAKF,EAAI,IACvDM,EAAIc,KAAKC,KAAKD,KAAKE,IAAIrB,EAAKE,EAAI,GAAKiB,KAAKE,IAAIpB,EAAKE,EAAI,IACtDG,EAAGa,KAAKC,KAAKD,KAAKE,IAAInB,EAAKJ,EAAI,GAAKqB,KAAKE,IAAIlB,EAAKJ,EAAI,IACtCQ,EAAGY,KAAKG,MAAMjB,EAAIA,EAAID,EAAIA,EAAIE,EAAIA,IAAM,EAAID,EAAID,IAMvEI,IAHIA,EAAoBW,KAAKtB,MAA2B,IAApBU,EAA6BY,KAAKI,GAAI,IAGjC,KAAO,IAI9Cf,EAFEZ,EAEkBuB,KAAKK,IAAIhB,EAAmB,IAAMA,GAGlCW,KAAKM,IAAIjB,EAAmB,IAAMA,GAGpDX,IAEFW,EAAoBW,KAAKtB,MAAMW,EAAmB,IAKtDA,CAqDA"}