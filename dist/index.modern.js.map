{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Calculate angles between landmarks\n * @author Yousuf Kalim\n */\n\n/**\n * With this function we will calculate the degrees of an angle\n * @param {Number} x1 first joint's x-axis\n * @param {Number} y1 first joint's y-axis\n * @param {Number} x2 second joint's x-axis\n * @param {Number} y2 second joint's y-axis\n * @param {Number} x3 third joint's x-axis\n * @param {Number} y3 third joint's y-axis\n * @param {Boolean} small boolean value to check if we have to return lower or upper angles\n * @param {Boolean} round boolean value to check if we have to return round\n * @return {Number} degree 0 to 360\n */\nconst calculateDegrees = (x1, y1, x2, y2, x3, y3, small, round) => {\n  // Making the radians from joint angles\n  const A = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  const B = Math.sqrt(Math.pow(x2 - x3, 2) + Math.pow(y2 - y3, 2));\n  const C = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2));\n  const jointAngleRadians = Math.acos((B * B + A * A - C * C) / (2 * B * A));\n\n  // Making the degree from radians angle\n  let jointAngleDegrees = Math.round((jointAngleRadians * 180.0) / Math.PI, 1);\n\n  //   This will prevent negative values (it will convert -90 to 270)\n  jointAngleDegrees = (jointAngleDegrees + 360) % 360;\n\n  if (small) {\n    //  we have to return lower angle\n    jointAngleDegrees = Math.min(jointAngleDegrees, 360 - jointAngleDegrees);\n  } else {\n    //   Otherwise we will send upper angle\n    jointAngleDegrees = Math.max(jointAngleDegrees, 360 - jointAngleDegrees);\n  }\n\n  if (round) {\n    //   Making round from 0\n    jointAngleDegrees = Math.round(jointAngleDegrees, 0);\n  }\n\n  // Finally return the calculated angle\n  return jointAngleDegrees;\n};\n\n// This function will validate the arguments\nconst validateArgs = (landmarks1, landmarks2, landmarks3, opt) => {\n  if (!landmarks1 || !landmarks2 || !landmarks3) {\n    throw new Error('Please provide landmarks');\n  }\n  if (!opt) {\n    throw new Error('Please provide options');\n  }\n  if (\n    [landmarks1, landmarks2, landmarks3].some(\n      (landmark) => isNaN(parseFloat(landmark.x)) || isNaN(parseFloat(landmark.y)),\n    )\n  ) {\n    throw new Error('Please provide landmarks with correct x and y values');\n  }\n  if (typeof opt.small !== 'boolean' || typeof opt.round !== 'boolean') {\n    throw new Error('Please provide options with correct small and round values');\n  }\n\n  return {\n    landmarks1: {\n      x: parseFloat(landmarks1.x),\n      y: parseFloat(landmarks1.y),\n    },\n    landmarks2: {\n      x: parseFloat(landmarks2.x),\n      y: parseFloat(landmarks2.y),\n    },\n    landmarks3: {\n      x: parseFloat(landmarks3.x),\n      y: parseFloat(landmarks3.y),\n    },\n  };\n};\n\n/**\n * With this function we will calculate the degrees of an angle\n * @return {Number} degree 0 to 360\n * @param landmarks1\n * @param landmarks2\n * @param landmarks3\n * @param opt\n */\nconst findAngle = (landmarks1, landmarks2, landmarks3, opt = { small: false, round: true }) => {\n  const validatedArgs = validateArgs(landmarks1, landmarks2, landmarks3, opt);\n  const { x: x1, y: y1 } = validatedArgs.landmarks1;\n  const { x: x2, y: y2 } = validatedArgs.landmarks2;\n  const { x: x3, y: y3 } = validatedArgs.landmarks3;\n  const { small, round } = opt;\n  const angle = calculateDegrees(x1, y1, x2, y2, x3, y3, small, round);\n  return angle;\n};\n\nexport default findAngle;\n"],"names":["findAngle","landmarks1","landmarks2","landmarks3","opt","small","round","validatedArgs","Error","some","landmark","isNaN","parseFloat","x","y","validateArgs","x1","y1","x2","y2","x3","y3","angle","A","Math","sqrt","pow","B","C","jointAngleRadians","acos","jointAngleDegrees","PI","min","max","calculateDegrees"],"mappings":"AAiBA,MAyEeA,EAAG,CAACC,EAAYC,EAAYC,EAAYC,EAAM,CAAEC,OAAO,EAAOC,OAAO,MAClF,MAAMC,EA3Ca,EAACN,EAAYC,EAAYC,EAAYC,KACxD,IAAKH,IAAeC,IAAeC,EACjC,MAAUK,IAAAA,MAAM,4BAElB,IAAKJ,EACH,UAAeI,MAAC,0BAElB,GACE,CAACP,EAAYC,EAAYC,GAAYM,KAClCC,GAAaC,MAAMC,WAAWF,EAASG,KAAOF,MAAMC,WAAWF,EAASI,KAG3E,MAAM,IAASN,MAAC,wDAElB,GAAyB,kBAAdJ,EAAIC,OAA4C,kBAAXD,EAACE,MAC/C,MAAUE,IAAAA,MAAM,8DAGlB,MAAO,CACLP,WAAY,CACVY,EAAGD,WAAWX,EAAWY,GACzBC,EAAGF,WAAWX,EAAWa,IAE3BZ,WAAY,CACVW,EAAGD,WAAWV,EAAWW,GACzBC,EAAGF,WAAWV,EAAWY,IAE3BX,WAAY,CACVU,EAAGD,WAAWT,EAAWU,GACzBC,EAAGF,WAAWT,EAAWW,IAE7B,EAYsBC,CAAad,EAAYC,EAAYC,EAAYC,IAC/DS,EAAGG,EAAIF,EAAGG,GAAOV,EAAcN,YAC/BY,EAAGK,EAAIJ,EAAGK,GAAOZ,EAAcL,YAC/BW,EAAGO,EAAIN,EAAGO,GAAOd,EAAcJ,YACjCE,MAAEA,EAAKC,MAAEA,GAAUF,EACnBkB,EA/EiB,EAACN,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIhB,EAAOC,KAEvD,MAAMiB,EAAIC,KAAKC,KAAKD,KAAKE,IAAIR,EAAKF,EAAI,GAAKQ,KAAKE,IAAIP,EAAKF,EAAI,IACvDU,EAAIH,KAAKC,KAAKD,KAAKE,IAAIR,EAAKE,EAAI,GAAKI,KAAKE,IAAIP,EAAKE,EAAI,IACvDO,EAAIJ,KAAKC,KAAKD,KAAKE,IAAIN,EAAKJ,EAAI,GAAKQ,KAAKE,IAAIL,EAAKJ,EAAI,IACvDY,EAAoBL,KAAKM,MAAMH,EAAIA,EAAIJ,EAAIA,EAAIK,EAAIA,IAAM,EAAID,EAAIJ,IAGvE,IAAqBQ,EAAGP,KAAKlB,MAA2B,IAApBuB,EAA6BL,KAAKQ,GAAI,GAmB1E,OAhBAD,GAAqBA,EAAoB,KAAO,IAI9CA,EAFE1B,EAEkBmB,KAAKS,IAAIF,EAAmB,IAAMA,GAGlCP,KAAKU,IAAIH,EAAmB,IAAMA,GAGpDzB,IAEFyB,EAAoBP,KAAKlB,MAAMyB,EAAmB,IAKtDA,GAmDgBI,CAAiBnB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIhB,EAAOC,GAC9D,OAAOgB"}